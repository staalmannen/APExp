This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by XZ Utils configure 5.6.3, which was
generated by GNU Autoconf 2.72.  Invocation command line was

  $ ./configure

## --------- ##
## Platform. ##
## --------- ##

hostname = krypton
uname -m = amd64
uname -r = 4
uname -s = Plan9
uname -v = 0

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /bin/
PATH: ./


## ----------- ##
## Core tests. ##
## ----------- ##

configure:3275: looking for aux files: config.rpath ltmain.sh compile missing install-sh config.guess config.sub
configure:3288:  trying ./build-aux/
configure:3317:   ./build-aux/config.rpath found
configure:3317:   ./build-aux/ltmain.sh found
configure:3317:   ./build-aux/compile found
configure:3317:   ./build-aux/missing found
configure:3299:   ./build-aux/install-sh found
configure:3317:   ./build-aux/config.guess found
configure:3317:   ./build-aux/config.sub found
configure:3448: checking build system type
configure:3464: result: x86_64-unknown-plan9
configure:3484: checking host system type
configure:3499: result: x86_64-unknown-plan9
configure:3559: checking if debugging code should be compiled
configure:3577: result: no
configure:3623: checking which encoders to build
configure:3730: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb arm64 sparc riscv
configure:3734: checking which decoders to build
configure:3841: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb arm64 sparc riscv
configure:4234: checking which match finders to build
configure:4291: result: hc3 hc4 bt2 bt3 bt4
configure:4309: checking which integrity checks to build
configure:4353: result: crc32 crc64 sha256
configure:4385: checking if external SHA-256 should be used
configure:4403: result: no
configure:4412: checking if MicroLZMA support should be built
configure:4425: result: yes
configure:4448: checking if .lz (lzip) decompression support should be built
configure:4467: result: yes
configure:4487: checking if assembler optimizations should be used
configure:4512: result: no
configure:4565: checking if small size is preferred over speed
configure:4585: result: no
configure:4601: checking if threading support is wanted
configure:4629: result: yes, posix
configure:4654: checking how much RAM to assume if the real amount is unknown
configure:4671: result: 128 MiB
configure:4834: checking if sandboxing should be used
configure:4852: result: maybe (autodetect)
configure:4911: checking for a shell that conforms to POSIX
configure:4954: result: no
configure:4968: error: No POSIX conforming shell (sh) was found.

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-unknown-plan9
ac_cv_env_CCASFLAGS_set=
ac_cv_env_CCASFLAGS_value=
ac_cv_env_CCAS_set=
ac_cv_env_CCAS_value=
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_LT_SYS_LIBRARY_PATH_set=
ac_cv_env_LT_SYS_LIBRARY_PATH_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_host=x86_64-unknown-plan9
gl_cv_posix_shell=no

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL=''
AMDEPBACKSLASH=''
AMDEP_FALSE=''
AMDEP_TRUE=''
AMTAR=''
AM_BACKSLASH=''
AM_CFLAGS=''
AM_DEFAULT_V=''
AM_DEFAULT_VERBOSITY=''
AM_V=''
AR=''
AS=''
AUTOCONF=''
AUTOHEADER=''
AUTOMAKE=''
AWK=''
CC=''
CCAS=''
CCASDEPMODE=''
CCASFLAGS=''
CCDEPMODE=''
CFLAGS=''
CFLAG_VISIBILITY=''
COND_ASM_X86_FALSE=''
COND_ASM_X86_TRUE='#'
COND_CHECK_CRC32_FALSE='#'
COND_CHECK_CRC32_TRUE=''
COND_CHECK_CRC64_FALSE='#'
COND_CHECK_CRC64_TRUE=''
COND_CHECK_SHA256_FALSE='#'
COND_CHECK_SHA256_TRUE=''
COND_DECODER_ARM64_FALSE='#'
COND_DECODER_ARM64_TRUE=''
COND_DECODER_ARMTHUMB_FALSE='#'
COND_DECODER_ARMTHUMB_TRUE=''
COND_DECODER_ARM_FALSE='#'
COND_DECODER_ARM_TRUE=''
COND_DECODER_DELTA_FALSE='#'
COND_DECODER_DELTA_TRUE=''
COND_DECODER_IA64_FALSE='#'
COND_DECODER_IA64_TRUE=''
COND_DECODER_LZMA1_FALSE='#'
COND_DECODER_LZMA1_TRUE=''
COND_DECODER_LZMA2_FALSE='#'
COND_DECODER_LZMA2_TRUE=''
COND_DECODER_LZ_FALSE='#'
COND_DECODER_LZ_TRUE=''
COND_DECODER_POWERPC_FALSE='#'
COND_DECODER_POWERPC_TRUE=''
COND_DECODER_RISCV_FALSE='#'
COND_DECODER_RISCV_TRUE=''
COND_DECODER_SIMPLE_FALSE='#'
COND_DECODER_SIMPLE_TRUE=''
COND_DECODER_SPARC_FALSE='#'
COND_DECODER_SPARC_TRUE=''
COND_DECODER_X86_FALSE='#'
COND_DECODER_X86_TRUE=''
COND_DOC_FALSE='#'
COND_DOC_TRUE=''
COND_DOXYGEN_FALSE=''
COND_DOXYGEN_TRUE='#'
COND_ENCODER_ARM64_FALSE='#'
COND_ENCODER_ARM64_TRUE=''
COND_ENCODER_ARMTHUMB_FALSE='#'
COND_ENCODER_ARMTHUMB_TRUE=''
COND_ENCODER_ARM_FALSE='#'
COND_ENCODER_ARM_TRUE=''
COND_ENCODER_DELTA_FALSE='#'
COND_ENCODER_DELTA_TRUE=''
COND_ENCODER_IA64_FALSE='#'
COND_ENCODER_IA64_TRUE=''
COND_ENCODER_LZMA1_FALSE='#'
COND_ENCODER_LZMA1_TRUE=''
COND_ENCODER_LZMA2_FALSE='#'
COND_ENCODER_LZMA2_TRUE=''
COND_ENCODER_LZ_FALSE='#'
COND_ENCODER_LZ_TRUE=''
COND_ENCODER_POWERPC_FALSE='#'
COND_ENCODER_POWERPC_TRUE=''
COND_ENCODER_RISCV_FALSE='#'
COND_ENCODER_RISCV_TRUE=''
COND_ENCODER_SIMPLE_FALSE='#'
COND_ENCODER_SIMPLE_TRUE=''
COND_ENCODER_SPARC_FALSE='#'
COND_ENCODER_SPARC_TRUE=''
COND_ENCODER_X86_FALSE='#'
COND_ENCODER_X86_TRUE=''
COND_FILTER_ARM64_FALSE='#'
COND_FILTER_ARM64_TRUE=''
COND_FILTER_ARMTHUMB_FALSE='#'
COND_FILTER_ARMTHUMB_TRUE=''
COND_FILTER_ARM_FALSE='#'
COND_FILTER_ARM_TRUE=''
COND_FILTER_DELTA_FALSE='#'
COND_FILTER_DELTA_TRUE=''
COND_FILTER_IA64_FALSE='#'
COND_FILTER_IA64_TRUE=''
COND_FILTER_LZMA1_FALSE='#'
COND_FILTER_LZMA1_TRUE=''
COND_FILTER_LZMA2_FALSE='#'
COND_FILTER_LZMA2_TRUE=''
COND_FILTER_LZ_FALSE='#'
COND_FILTER_LZ_TRUE=''
COND_FILTER_POWERPC_FALSE='#'
COND_FILTER_POWERPC_TRUE=''
COND_FILTER_RISCV_FALSE='#'
COND_FILTER_RISCV_TRUE=''
COND_FILTER_SIMPLE_FALSE='#'
COND_FILTER_SIMPLE_TRUE=''
COND_FILTER_SPARC_FALSE='#'
COND_FILTER_SPARC_TRUE=''
COND_FILTER_X86_FALSE='#'
COND_FILTER_X86_TRUE=''
COND_GNULIB_FALSE=''
COND_GNULIB_TRUE=''
COND_INTERNAL_SHA256_FALSE=''
COND_INTERNAL_SHA256_TRUE=''
COND_LZIP_DECODER_FALSE='#'
COND_LZIP_DECODER_TRUE=''
COND_LZMADEC_FALSE='#'
COND_LZMADEC_TRUE=''
COND_LZMAINFO_FALSE='#'
COND_LZMAINFO_TRUE=''
COND_LZMALINKS_FALSE='#'
COND_LZMALINKS_TRUE=''
COND_MAIN_DECODER_FALSE='#'
COND_MAIN_DECODER_TRUE=''
COND_MAIN_ENCODER_FALSE='#'
COND_MAIN_ENCODER_TRUE=''
COND_MICROLZMA_FALSE='#'
COND_MICROLZMA_TRUE=''
COND_SCRIPTS_FALSE='#'
COND_SCRIPTS_TRUE=''
COND_SHARED_FALSE=''
COND_SHARED_TRUE=''
COND_SMALL_FALSE=''
COND_SMALL_TRUE='#'
COND_SYMVERS_GENERIC_FALSE=''
COND_SYMVERS_GENERIC_TRUE=''
COND_SYMVERS_LINUX_FALSE=''
COND_SYMVERS_LINUX_TRUE=''
COND_THREADS_FALSE=''
COND_THREADS_TRUE=''
COND_W32_FALSE=''
COND_W32_TRUE='#'
COND_XZDEC_FALSE='#'
COND_XZDEC_TRUE=''
COND_XZ_FALSE='#'
COND_XZ_TRUE=''
CPP=''
CPPFLAGS=''
CSCOPE=''
CTAGS=''
CYGPATH_W=''
DEFS=''
DEPDIR=''
DLLTOOL=''
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP=''
ETAGS=''
EXEEXT=''
FGREP=''
FILECMD=''
GETOPT_H=''
GETTEXT_MACRO_VERSION=''
GMSGFMT=''
GMSGFMT_015=''
GREP=''
HAVE_VISIBILITY=''
INSTALL_DATA=''
INSTALL_PROGRAM=''
INSTALL_SCRIPT=''
INSTALL_STRIP_PROGRAM=''
INTLLIBS=''
INTL_MACOSX_LIBS=''
LD='pcc'
LDFLAGS=''
LIBICONV=''
LIBINTL=''
LIBOBJS=''
LIBS=''
LIBTOOL=''
LIPO=''
LN_EXEEXT='$(EXEEXT)'
LN_S=''
LTLIBICONV=''
LTLIBINTL=''
LTLIBOBJS=''
LT_SYS_LIBRARY_PATH=''
MAKEINFO=''
MANIFEST_TOOL=''
MKDIR_P=''
MSGFMT=''
MSGMERGE=''
MSGMERGE_FOR_MSGFMT_OPTION=''
NM=''
NMEDIT=''
OBJDUMP=''
OBJEXT=''
OTOOL64=''
OTOOL=''
PACKAGE=''
PACKAGE_BUGREPORT='xz@tukaani.org'
PACKAGE_NAME='XZ Utils'
PACKAGE_STRING='XZ Utils 5.6.3'
PACKAGE_TARNAME='xz'
PACKAGE_URL='https://tukaani.org/xz/'
PACKAGE_VERSION='5.6.3'
PATH_SEPARATOR=':'
POSIX_SHELL=''
POSUB=''
PREFERABLY_POSIX_SHELL='/bin/sh'
PTHREAD_CC=''
PTHREAD_CFLAGS=''
PTHREAD_CXX=''
PTHREAD_LIBS=''
RANLIB=''
RC=''
SED=''
SET_MAKE=''
SHELL='/bin/sh'
STRIP=''
USE_NLS=''
VERSION=''
XGETTEXT=''
XGETTEXT_015=''
XGETTEXT_EXTRA_OPTIONS=''
ac_ct_AR=''
ac_ct_CC=''
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE=''
am__fastdepCCAS_FALSE=''
am__fastdepCCAS_TRUE=''
am__fastdepCC_FALSE=''
am__fastdepCC_TRUE=''
am__include=''
am__isrc=''
am__leading_dot=''
am__nodep=''
am__quote=''
am__rm_f_notfound=''
am__tar=''
am__untar=''
am__xargs_n=''
ax_pthread_config=''
bindir='${exec_prefix}/bin'
build='x86_64-unknown-plan9'
build_alias=''
build_cpu='x86_64'
build_os='plan9'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
enable_path_for_scripts=''
exec_prefix='NONE'
host='x86_64-unknown-plan9'
host_alias=''
host_cpu='x86_64'
host_os='plan9'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh=''
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localedir_c=''
localedir_c_make=''
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p=''
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='NONE'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''
xz=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "XZ Utils"
#define PACKAGE_TARNAME "xz"
#define PACKAGE_VERSION "5.6.3"
#define PACKAGE_STRING "XZ Utils 5.6.3"
#define PACKAGE_BUGREPORT "xz@tukaani.org"
#define PACKAGE_URL "https://tukaani.org/xz/"
#define NDEBUG 1
#define HAVE_ENCODER_LZMA1 1
#define HAVE_ENCODER_LZMA2 1
#define HAVE_ENCODER_DELTA 1
#define HAVE_ENCODER_X86 1
#define HAVE_ENCODER_POWERPC 1
#define HAVE_ENCODER_IA64 1
#define HAVE_ENCODER_ARM 1
#define HAVE_ENCODER_ARMTHUMB 1
#define HAVE_ENCODER_ARM64 1
#define HAVE_ENCODER_SPARC 1
#define HAVE_ENCODER_RISCV 1
#define HAVE_ENCODERS 1
#define HAVE_DECODER_LZMA1 1
#define HAVE_DECODER_LZMA2 1
#define HAVE_DECODER_DELTA 1
#define HAVE_DECODER_X86 1
#define HAVE_DECODER_POWERPC 1
#define HAVE_DECODER_IA64 1
#define HAVE_DECODER_ARM 1
#define HAVE_DECODER_ARMTHUMB 1
#define HAVE_DECODER_ARM64 1
#define HAVE_DECODER_SPARC 1
#define HAVE_DECODER_RISCV 1
#define HAVE_DECODERS 1
#define HAVE_MF_HC3 1
#define HAVE_MF_HC4 1
#define HAVE_MF_BT2 1
#define HAVE_MF_BT3 1
#define HAVE_MF_BT4 1
#define HAVE_CHECK_CRC32 1
#define HAVE_CHECK_CRC64 1
#define HAVE_CHECK_SHA256 1
#define HAVE_LZIP_DECODER 1
#define ASSUME_RAM 128

configure: exit 1
