
Usage: objc [ options ] infile -o outfile

Options:
@filename        # use options listed in "filename"
@envname         # use options set in env.variable
-appl            # add flags for linking a MacOS app
-browse dir      # update Objective-C browser files in dir
-Bdir            # set OBJCDIR to dir
-C               # same as -Fi, unless used with -E to preserve comments
-Dsymbol         # define preprocessor symbol
-errout file     # redirect stderr to file
-Ipath           # add path to include search path
-O               # turn on optimization
-Fletter         # stop at compilation phase identified by letter
-objc            # compile C files as Objective-C
-import          # allow  #import and // comments (if supported)
-Usymbol         # undefine preprocessor symbol
-Wletter,option  # pass option to tool (p cpp, c cc, o objc1, l ld)
-Wletter:option  # pass option to tool (p cpp, c cc, o objc1, l ld)
-Wall            # turn on all warnings
-c               # do not link and produce a .o file (-Fo)
-check           # (objc.exe only) print commands without executing
-dl              # combine objects into a dynamic module (shared library)
-dollars         # allow $ in identifiers (if supported by C compiler)
-dynamic         # mark symbols in program as exportable to dynamic modules
-export spec     # emit 'spec' for class globals and bind functions
-g               # add debug information
-i               # do not link and produce a .j tdf file (tcc -Fj)
-jfoo            # add TDF library foo.tl
-Jdir            # add dir to search path for TDF libraries
-lfoo            # add library libfoo.a
-Ldir            # add dir to search path for libraries
-gc              # use garbage collecting memory allocation
-help            # print this message
-inlineCache     # generate code for inline cache messenger
-main fun        # use fun as main function (default is main())
-mpwtool         # add flags for linking an MPW tool
-noBlocks        # turn off compiler support for Objective-C blocks
-noCache         # turn off global messenger cache (differs from inlineCache)
-noFiler         # do not generate filer code; do not link AsciiFiler
-noFwd           # use the C messenger without support for forwarding msgs
-noI             # do not search standard objc headers
-noLibs          # do not link against standard objc libraries
-noPostLink      # generate code for automatic objcrt initialization
-noSelfAssign    # do not allow self as left-hand-side in assignments
-noCategories    # do not allow categories (and use +addMethodsTo: instead)
-noTags          # do not generate line tags
-noNilRcvr       # do not allow nil to be receiver of messages
-nostdinc        # do not search standard system headers
-opt arg         # MPW optimization options
-pic             # position independent code for shlibs or dynamic modules
-ppi             # Stepstone/PPI compatibility mode
-postLink        # generate code for postlink objcrt initialization
-prod            # combine .j tdf files into a .ta tdf archive
-q               # suppress copyright
-s               # (WATCOM) Remove stack overflow checks
-retain          # do not remove intermediate files
-refcnt          # generate code for reference counts
-sioux           # add flags for linking a Metrowerks SIOUX app
-static          # link static libraries
-sym arg         # MPW enable/disable debugging information
-Tprefix         # prefix for temporary files such as -T/tmp/
-unbuf           # turn off stream buffering for code generation
-undef           # undefine standard system preprocessor symbols
-verbose         # print commands that are being executed
-version         # print compiler version
-w               # turn off all warnings
-xm arg          # MPW linker options
-Yenv            # (tcc) -Yansi for ansi environment, -Yposix, -Yunix95 etc.
-3r              # (WATCOM) 386 register calling conventions
-3s              # (WATCOM) 386 stack calling conventions

Extensions:
m                # Objective-C source file
c                # C source file
i                # preprocessed C source file
j                # target independent TDF capsule
t                # target dependent TDF capsule
o (obj)          # object file
a (lib)          # library (archive)
ta               # TDF archive

Environment:
TMPDIR           # temporary files
OBJCDIR          # top directory for finding resources
OBJCOPT          # options always prepended to cmd line options
OBJCRTMSG        # file for message tracing
OBJCRTDBG        # file for dbg() output

