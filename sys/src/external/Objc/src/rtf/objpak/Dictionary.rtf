{\rtf1\ansi{\fonttbl\f0\fnil Times-Roman;\f1\fswiss Helvetica;\f2\fmodern Courier;}\paperw12000\paperh8000\margl40\margr40
\pard\f0\fs24\cf0 Portable Object Compiler (c) 1997,98.  All Rights Reserved.\fs16\
\
\
\
\
\
\
\f1\b\fs56\li2200 Dictionary\f0\b0\fs16\
\
\
\
\
\
\f0\fs28\li2200 {\b {\f1 Inherits from:}} Object\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Class Description\b0\f0\fs16\
\
\f0\fs28\li2200 Dictionaries (instances of the {\b Dictionary} class) are key-value tables : to each key object, a value object is associated.  The key can then be used to access the corresponding value.  There are a few special provisions for tables with {\b String} instances as keys.\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Method types\b0\f0\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Creation}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- new\
	- copy\
	- deepCopy\
	- emptyYourself\
	- freeContents\
	- freeAll\
	- free\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Interrogation}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- size\
	- isEmpty\
	- includesKey:\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Comparing}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- hash\
	- isEqual:\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Indexed Access}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- atKey:\
	- atKey:ifAbsent:\
	- atKeySTR:\
	- atKey:put:\
	- atKeySTR:put:\
	- eachKey\
	- eachValue\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Adding and Removing}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- removeKey:\
	- removeKey:ifAbsent:\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Blocks}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- keysDo:\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Printing}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- printOn:\
\pard\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Methods\b0\f0\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 new\f0\b0\
\f0\fs28\li2500 +{\b new}\fs16\
\
\f0\fs28\li2200 Returns a new empty dictionary.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 copy\f0\b0\
\f0\fs28\li2500 -{\b copy}\fs16\
\
\f0\fs28\li2200 Returns a new copy of the dictionary.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 deepCopy\f0\b0\
\f0\fs28\li2500 -{\b deepCopy}\fs16\
\
\f0\fs28\li2200 Returns a new copy of the dictionary.  The members in the new dictionary are deep copies of the members in the original dictionary.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 emptyYourself\f0\b0\
\f0\fs28\li2500 -{\b emptyYourself}\fs16\
\
\f0\fs28\li2200 Removes all the keys and values of the dictionary (without freeing them).  Returns the receiver.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 freeContents\f0\b0\
\f0\fs28\li2500 -{\b freeContents}\fs16\
\
\f0\fs28\li2200 This method is, in the case of the Dictionary class, equivalent to {\f2 emptyYourself}.  Note that for the sake of Stepstone ICpak101 compatibility, this method does not free keys and values.  Use {\f2 freeAll} for that.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 freeAll\f0\b0\
\f0\fs28\li2500 -{\b freeAll}\fs16\
\
\f0\fs28\li2200 This method frees all the keys and values in the dictionary, without freeing the dictionary itself.  Returns the dictionary.\fs16\
\
\f0\fs28\li2200 {\b {\f1 Note:}} This method is ObjectPak specific.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 free\f0\b0\
\f0\fs28\li2500 -{\b free}\fs16\
\
\f0\fs28\li2200 Frees the dictionary, but not its contents.  Returns {\b nil}.  Do :\fs16\
\
\f2\fs24\li2800 aDic = [[aDic freeAll] free];\
\f0\fs16\
\f0\fs28\li2200 if you want to free the dictionary and its contents.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 size\f0\b0\
\f0\fs28\li2500 - (unsigned){\b size}\fs16\
\
\f0\fs28\li2200 Returns the number of key-value associations in the dictionary.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 isEmpty\f0\b0\
\f0\fs28\li2500 - (BOOL){\b isEmpty}\fs16\
\
\f0\fs28\li2200 Whether the number of associations in the dictionary is equal to zero.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 includesKey:\f0\b0\
\f0\fs28\li2500 - (BOOL){\b includesKey}:{\i aKey}\fs16\
\
\f0\fs28\li2200 Returns YES if there is an association with key matching {\i aKey}.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 hash\f0\b0\
\f0\fs28\li2500 - (unsigned){\b hash}\fs16\
\
\f0\fs28\li2200 Returns a hash value based on the receiver's address and the results of sending the {\f2 hash} message to the contents.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 isEqual:\f0\b0\
\f0\fs28\li2500 - (BOOL){\b isEqual}:{\i aDic}\fs16\
\
\f0\fs28\li2200 Returns YES if {\i aDic} is a dictionary, and if its keys and values respond affirmatively to the message {\f2 isEqual:} when compared to the corresponding objects of the receiver's contents.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 atKey:\f0\b0\
\f0\fs28\li2500 -{\b atKey}:{\i aKey}\fs16\
\
\f0\fs28\li2200 Returns the value of the association matching {\i aKey}.  Returns {\b nil} if the association is not found.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 atKey:ifAbsent:\f0\b0\
\f0\fs28\li2500 -{\b atKey}:{\i aKey}{\b ifAbsent}:{\i exceptionBlock}\fs16\
\
\f0\fs28\li2200 Returns the value of the association matching {\i aKey}.  Evaluates {\i exceptionBlock} and returns its return value, if the association is not found.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 atKeySTR:\f0\b0\
\f0\fs28\li2500 -{\b atKeySTR}:(STR){\i strKey}\fs16\
\
\f0\fs28\li2200 Returns the value of the association matching {\i strKey}.  Returns {\b nil} if the association is not found.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 atKey:put:\f0\b0\
\f0\fs28\li2500 -{\b atKey}:{\i aKey}{\b put}:{\i anObject}\fs16\
\
\f0\fs28\li2200 Associates {\i aKey} to {\i anObject}.  Adds the objects to the dictionary.  If {\i aKey} was already in the dictionary, makes {\i anObject} the value for this key and returns the old value.  Otherwise returns {\b nil}.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 atKeySTR:put:\f0\b0\
\f0\fs28\li2500 -{\b atKeySTR}:(STR){\i strKey}{\b put}:{\i anObject}\fs16\
\
\f0\fs28\li2200 Associates {\i strKey} to {\i anObject}.  Adds the objects to the dictionary.  If {\i strKey} was already in the dictionary, makes {\i anObject} the value for this key and returns the old value.  Otherwise returns {\b nil}.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 eachKey\f0\b0\
\f0\fs28\li2500 -{\b eachKey}\fs16\
\
\f0\fs28\li2200 Returns a sequence of the key objects in the dictionary.\fs16\
\
\f2\fs24\li2800 keys = [aDic eachKey];\
while ((aKey = [aSeq next])) \{\
    /* do something */\
\}\
keys = [keys free];\
\f0\fs16\
\f0\fs28\li2200 {\b {\f1 See also:}} eachValue\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 eachValue\f0\b0\
\f0\fs28\li2500 -{\b eachValue}\fs16\
\
\f0\fs28\li2200 Returns a sequence of the value objects in the dictionary.\fs16\
\
\f2\fs24\li2800 keys   = [aDic eachKey];\
values = [aDic eachValue];\
while ((aKey = [aSeq next])) \{\
    aValue = [values next];\
    /* do something */\
\}\
keys   = [keys free];\
values = [values free];\
\f0\fs16\
\f0\fs28\li2200 {\b {\f1 See also:}} eachKey\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 removeKey:\f0\b0\
\f0\fs28\li2500 -{\b removeKey}:{\i key}\fs16\
\
\f0\fs28\li2200 Remove key from the receiver and return value for given {\i key}.  If {\i key} is not in the receiver, signals the {\b NotFound} exception.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 removeKey:ifAbsent:\f0\b0\
\f0\fs28\li2500 -{\b removeKey}:{\i key}{\b ifAbsent}:{\i aBlock}\fs16\
\
\f0\fs28\li2200 Remove key (and its associated value) from the receiver.  If key is not in the receiver, answers the result of evaluating {\i aBlock}.  Otherwise, answers the  value externally named by {\i key}.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 keysDo:\f0\b0\
\f0\fs28\li2500 -{\b keysDo}:{\i aBlock}\fs16\
\
\f0\fs28\li2200 The {\f2 keysDo:} message iterates through all the Dictionary elements, running a  one-argument block of code specified by the aBlock argument with the argument set to the key of each assocation.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 printOn:\f0\b0\
\f0\fs28\li2500 -{\b printOn}:(IOD){\i aFile}\fs16\
\
\f0\fs28\li2200 Prints a comma separated list of the key-value pairs by sending each individual object a {\f2 printOn:} message.  Returns the receiver.\fs16\
\
\fs16\
\
\
}
