{\rtf1\ansi{\fonttbl\f0\fnil Times-Roman;\f1\fswiss Helvetica;\f2\fmodern Courier;}\paperw12000\paperh8000\margl40\margr40
\pard\f0\fs24\cf0 Portable Object Compiler (c) 1997,98.  All Rights Reserved.\fs16\
\
\
\
\
\
\
\f1\b\fs56\li2200 Sequence\f0\b0\fs16\
\
\
\
\
\
\f0\fs28\li2200 {\b {\f1 Inherits from:}} Object\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Class Description\b0\f0\fs16\
\
\f0\fs28\li2200 Sequences are used to loop or {\i sequence} over a group of objects.  Typically, an {\b Sequence} instance is generated by using some method like {\b OrdCltn}'s {\f2 eachElement}.  Then, within a loop, one can send {\f2 next} messages to the sequence until the end is reached (when the {\f2 next} method returns {\b nil}).  Finally, after using the sequence, you have to free the sequence object.\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Warning\b0\f0\fs16\
\
\f0\fs28\li2200 Using a sequence can lead to problems if, in sequencing over a collection, that collection is modified, e.g., as in the following :\fs16\
\
\f2\fs24\li2800 id item;\
id aSeq;\
\
aSeq = [aCol eachElement];\
while ((item = [aSeq next])) [aCol add:something]; /* WRONG !!! */\
aSeq = [aSeq free];\
\f0\fs16\
\f0\fs28\li2200 You may not modify a group of objects while sequencing over its contents.\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Method types\b0\f0\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Creation}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- copy\
	- free\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Interrogation}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- size\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Accessing}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- next\
	- peek\
	- previous\
	- first\
	- last\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Printing}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- printOn:\
\pard\fs16\
\
\pard\tx2600\fs28\li2600\cf0
{\b Performing}
\pard\tx6000\fs28\fi-3800\li6000\cf0
	- do:\
\pard\fs16\
\
\fs16\
\
\f1\b\fs36\li1400 Methods\b0\f0\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 copy\f0\b0\
\f0\fs28\li2500 -{\b copy}\fs16\
\
\f0\fs28\li2200 Returns a copy of the sequence.  Can be used independently of the original sequence.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 free\f0\b0\
\f0\fs28\li2500 -{\b free}\fs16\
\
\f0\fs28\li2200 Frees the receiver, but not the objects in the collection being sequenced over.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 size\f0\b0\
\f0\fs28\li2500 - (unsigned){\b size}\fs16\
\
\f0\fs28\li2200 Returns the total number of items in the sequence.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 next\f0\b0\
\f0\fs28\li2500 -{\b next}\fs16\
\
\f0\fs28\li2200 Returns the next object in the sequence if there is one and advances the sequence.  When it reaches the end of the sequence, returns {\b nil}.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 peek\f0\b0\
\f0\fs28\li2500 -{\b peek}\fs16\
\
\f0\fs28\li2200 Returns the next object in the sequence if there is one, but does not advance the sequence.  When it reaches the end of the sequence, returns {\b nil}.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 previous\f0\b0\
\f0\fs28\li2500 -{\b previous}\fs16\
\
\f0\fs28\li2200 Returns the object that was returned by the last {\f2 next} message.  If there were no {\f2 next} messages since the sequence was created, or the sequence is empty, returns {\b nil}.  Doesn't affect the current position in the sequence.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 first\f0\b0\
\f0\fs28\li2500 -{\b first}\fs16\
\
\f0\fs28\li2200 Returns the first object in the sequence, unlesss there are no members in the sequence, in which case it returns {\b nil}.  Doesn't affect the current position in the sequence.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 last\f0\b0\
\f0\fs28\li2500 -{\b last}\fs16\
\
\f0\fs28\li2200 Returns the last object in the sequence, unlesss there are no members in the sequence, in which case it returns {\b nil}.  Doesn't affect the current position in the sequence.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 printOn:\f0\b0\
\f0\fs28\li2500 -{\b printOn}:(IOD){\i aFile}\fs16\
\
\f0\fs28\li2200 Prints a newline separated list of the objects in the sequence to {\i aFile}, by sending each individual object a {\f2 printOn:} message.  Returns the sequence when there are no more elements left.\fs16\
\
\fs16\
\
\f1\b\fs28\li2200 do:\f0\b0\
\f0\fs28\li2500 -{\b do}:{\i aBlock}\fs16\
\
\f0\fs28\li2200 Performs {\i aBlock} for the remaining members of a sequence.  {\i aBlock} should take one argument, which is the element.  Typically used as in,\fs16\
\
\f2\fs24\li2800 [[aDictionary eachValue] do:\{ :each | [each show]; \}];\
\f0\fs16\
\fs16\
\
\
}
